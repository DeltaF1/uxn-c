( 
	app/noodle : illustration program
	
	right-click - erase
	alt-click - drag canvas
	arrows - move zoom
	space - toogle zoom
	backspace - blank canvas
	1-8 - select brush size

	TODO
		- Resize buttons
		- Limit size
		- Pixel cleanup brush
		- Drag canvas content
	BUGS
		- Zoom drawing with other tools
)

%RTN   { JMP2r }
%RTN? { #00 EQU #02 JNZ STH2r JMP2 }
%ABS2 { DUP2 #000f SFT2 EQU #04 JNZ #ffff MUL2 }
%CLN2r { DUP2 STH2 }
%STEP8 { #0033 SFT2 }
%MOD8 { #0007 AND2  }
%SFL { #40 SFT SFT }
%++ { #0001 ADD2 } %-- { #0001 SUB2 }
%2/ { #0001 SFT2 }
%8/ { #0003 SFT2 } %8* { #0030 SFT2 }
%8+ { #0008 ADD2 }

( variables )

;cursor { x 2 y 2 x0 2 y0 2 dx 2 dy 2 }
;brush { tool 1 size 1 patt 1 drag 1 last 1 oper 2 }
;zoom { active 1 x 2 y 2 }
;center { x 2 y 2 }
( interface )
;toolpane { x1 2 y1 2 x2 2 y2 2 }
;pattpane { x1 2 y1 2 x2 2 y2 2 }
;sizepane { x1 2 y1 2 x2 2 y2 2 }
;canvas { x1 2 y1 2 x2 2 y2 2 w 2 h 2 }

;rect { x1 2 y1 2 x2 2 y2 2 }
;line { x1 2 y1 2 x2 2 y2 2 sx 2 sy 2 dx 2 dy 2 e1 2 e2 2 }
;origin { x1 2 y1 2 x2 2 y2 2 }
;color { byte 1 }
;pt0 { x 2 y 2 }
;pt1 { x 2 y 2 }
;pt2 { x 2 y 2 } ( paint-rect )
;px { x 1 y 1 }

( devices )

|0100 ;Console { pad 8 char 1 byte 1 short 2 }
|0110 ;Screen { width 2 height 2 pad 4 x 2 y 2 color 1 }
|0120 ;Sprite { pad 8 x 2 y 2 addr 2 color 1 }
|0130 ;Controller { buttons 1 }
|0140 ;Keys { key 1 }
|0150 ;Mouse { x 2 y 2 state 1 chord 1 }
|0160 ;File { pad 8 name 2 length 2 load 2 save 2 }
|01F0 .RESET .FRAME .ERROR ( vectors )
|01F8 [ e0fd 30fd 30fd ]   ( palette )

( program )

|0200 @RESET 
	
	( default canvas )
	#002a =canvas.w #001a =canvas.h

	( default brush )
	#04 =brush.size
	#00 =brush.patt
	#00 =brush.tool

	( load file )
	,filepath ,load-file JSR2

	( find screen center )
	~Screen.width #0002 DIV2 =center.x
	~Screen.height #0002 DIV2 =center.y

	( center canvas )
	~center.x ~canvas.w 8* 2/ SUB2 =canvas.x1 
	~center.y ~canvas.h 8* 2/ SUB2 =canvas.y1

	,draw-background JSR2
	,fit-canvas JSR2

	( setup panes )
	#0010 =toolpane.x1 #0010 =toolpane.y1
	#0010 =pattpane.x1 ~Screen.height #0018 SUB2 =pattpane.y1
	~Screen.width #0050 SUB2 =sizepane.x1 #0010 =sizepane.y1

	~toolpane.x1 #0028 ADD2 =toolpane.x2
	~toolpane.y1 #0008 ADD2 =toolpane.y2
	,draw-toolpane JSR2

	~pattpane.x1 #0040 ADD2 =pattpane.x2
	~pattpane.y1 #0008 ADD2 =pattpane.y2
	,draw-pattpane JSR2

	~sizepane.x1 #0040 ADD2 =sizepane.x2
	~sizepane.y1 #0008 ADD2 =sizepane.y2
	,draw-sizepane JSR2

BRK

@FRAME 

	,draw-cursor JSR2

	( release drag )
	~Mouse.state #00 EQU ~brush.drag #01 EQU #0101 NEQ2 ^$no-release JNZ
		~origin.x1 #0002 SUB2 ~origin.y1 #0002 SUB2 ~origin.x2 #0002 ADD2 ~origin.y2 #0002 ADD2 #00 ,fill-rect JSR2
		~canvas.x1 -- ~canvas.y1 -- ~canvas.x2 ~canvas.y2 #10 ,line-rect JSR2
		,draw-background JSR2
		,fit-canvas JSR2
		,draw-toolpane JSR2
		,draw-pattpane JSR2
		,draw-sizepane JSR2
		#00 =brush.drag
	$no-release

	( operations on release line/rect )
	~Mouse.state ~brush.last EQU ,$no-touch-change JNZ2
	~Mouse.x CLN2r ~canvas.x1 GTS2 STH2r ~canvas.x2 LTS2 #0101 NEQ2 ,$no-touch-change JNZ2
	~Mouse.y CLN2r ~canvas.y1 GTS2 STH2r ~canvas.y2 LTS2 #0101 NEQ2 ,$no-touch-change JNZ2
		~Mouse.state #00 EQU ^$no-touch-ondown JNZ
			( on down )
			~Mouse.x =cursor.dx
			~Mouse.y =cursor.dy
		$no-touch-ondown
		~Mouse.state #00 NEQ ^$no-touch-onup JNZ
			( on up )
			~brush.tool #02 NEQ ^$no-touch-line JNZ
				~cursor.dx ~canvas.x1 SUB2 ~cursor.dy ~canvas.y1 SUB2 ~Mouse.x ~canvas.x1 SUB2 ~Mouse.y ~canvas.y1 SUB2 ,paint-line JSR2
				,$touch-end JMP2
			$no-touch-line
			~brush.tool #03 NEQ ^$no-touch-rect JNZ
				~cursor.dx ~canvas.x1 SUB2 ~cursor.dy ~canvas.y1 SUB2 ~Mouse.x ~canvas.x1 SUB2 ~Mouse.y ~canvas.y1 SUB2 ,paint-rect JSR2
				,$touch-end JMP2
			$no-touch-rect
		$no-touch-onup
	$no-touch-change

	~Mouse.state #00 EQU ,$no-touch JNZ2

		( drag )
		~Controller #02 NEQ ,$no-drag JNZ2
			~brush.drag #00 NEQ ^$no-drag-start JNZ
				~canvas.x1 =origin.x1
				~canvas.y1 =origin.y1
				~canvas.x2 =origin.x2
				~canvas.y2 =origin.y2
			$no-drag-start
			~canvas.x1 -- ~canvas.y1 -- ~canvas.x2 ~canvas.y2 #10 ,line-rect JSR2
			~canvas.x1 ~Mouse.x ~cursor.x0 SUB2 ADD2 =canvas.x1
			~canvas.y1 ~Mouse.y ~cursor.y0 SUB2 ADD2 =canvas.y1
			~canvas.w 8* ~canvas.x1 ADD2 =canvas.x2 
			~canvas.h 8* ~canvas.y1 ADD2 =canvas.y2 
			~canvas.x1 -- ~canvas.y1 -- ~canvas.x2 ~canvas.y2 #13 ,line-rect JSR2
			#01 =brush.drag
			,$touch-end JMP2
		$no-drag

		( in sizepane )
		~Mouse.x CLN2r ~sizepane.x1 GTH2 STH2r ~sizepane.x2 LTH2 #0101 NEQ2 ^$no-touch-sizepane JNZ
		~Mouse.y CLN2r ~sizepane.y1 GTH2 STH2r ~sizepane.y2 LTH2 #0101 NEQ2 ^$no-touch-sizepane JNZ
			( release ) #00 =Mouse.state
			#01 =brush.tool
			~Mouse.x ~sizepane.x1 SUB2 8/ SWP POP =brush.size
			( draw ) ,draw-sizepane JSR2
			( draw ) ,draw-toolpane JSR2
			,$touch-end JMP2
		$no-touch-sizepane

		( in pattpane )
		~Mouse.x CLN2r ~pattpane.x1 GTH2 STH2r ~pattpane.x2 LTH2 #0101 NEQ2 ^$no-touch-pattpane JNZ
		~Mouse.y CLN2r ~pattpane.y1 GTH2 STH2r ~pattpane.y2 LTH2 #0101 NEQ2 ^$no-touch-pattpane JNZ
			( release ) #00 =Mouse.state
			~Mouse.x ~pattpane.x1 SUB2 8/ SWP POP =brush.patt
			( draw ) ,draw-pattpane JSR2
			,$touch-end JMP2
		$no-touch-pattpane

		( in toolpane )
		~Mouse.x CLN2r ~toolpane.x1 GTH2 STH2r ~toolpane.x2 LTH2 #0101 NEQ2 ^$no-touch-toolpane JNZ
		~Mouse.y CLN2r ~toolpane.y1 GTH2 STH2r ~toolpane.y2 LTH2 #0101 NEQ2 ^$no-touch-toolpane JNZ
			( release ) #00 =Mouse.state
			~Mouse.x ~toolpane.x1 SUB2 8/ SWP POP =brush.tool
			( draw ) ,draw-toolpane JSR2
			,$touch-end JMP2
		$no-touch-toolpane

		( in canvas )
		~Mouse.x CLN2r ~canvas.x1 GTS2 STH2r ~canvas.x2 LTS2 #0101 NEQ2 ,$no-touch-canvas JNZ2
		~Mouse.y CLN2r ~canvas.y1 GTS2 STH2r ~canvas.y2 LTS2 #0101 NEQ2 ,$no-touch-canvas JNZ2

			( set cursor operation )
			,add-pixel ~Mouse.state #01 EQU ,$no-oper JNZ2 POP2 ,remove-pixel $no-oper =brush.oper

			~brush.tool #00 NEQ ^$no-touch-pen JNZ
				~cursor.x0 ~canvas.x1 SUB2 ~cursor.y0 ~canvas.y1 SUB2 ~Mouse.x ~canvas.x1 SUB2 ~Mouse.y ~canvas.y1 SUB2 ,paint-line JSR2
				,$touch-end JMP2
			$no-touch-pen

			~brush.tool #01 NEQ ^$no-touch-brush JNZ
				~Mouse.x ~canvas.x1 SUB2 ~Mouse.y ~canvas.y1 SUB2 ,paint-brush JSR2
				,$touch-end JMP2
			$no-touch-brush

			~brush.tool #04 NEQ ^$no-touch-zoom JNZ
				~zoom.active #00 EQU =zoom.active
				( release ) #00 =Mouse.state
				~Mouse.x ~canvas.x1 SUB2 ~canvas.w 2/ SUB2 =zoom.x
				~Mouse.y ~canvas.y1 SUB2 ~canvas.h 2/ SUB2 =zoom.y
				,redraw JSR2
				,$touch-end JMP2
			$no-touch-zoom

		$no-touch-canvas

		( background interface )
		~Mouse.y STEP8 ~Screen.height #0010 SUB2 NEQ2 ^$no-touch-background JNZ
			~Mouse.x ~Screen.width #0020 SUB2 SUB2 8/ 
			DUP2 #0001 NEQ2 ^$no-load-button JNZ
				,filepath ,load-file JSR2
				,draw-canvas JSR2
				( release ) #00 =Mouse.state
			$no-load-button
			DUP2 #0002 NEQ2 ^$no-save-button JNZ
				,filepath ,save-file JSR2
				( release ) #00 =Mouse.state
			$no-save-button
			POP2
		$no-touch-background

		( jump label )
		$touch-end

	$no-touch

	~Controller.buttons #f0 AND
		DUP #04 SFT #01 AND #01 NEQ ^$no-up JNZ
			( move ) ~zoom.y -- =zoom.y $no-up
		DUP #05 SFT #01 AND #01 NEQ ^$no-down JNZ
			( move ) ~zoom.y ++ =zoom.y $no-down
		DUP #06 SFT #01 AND #01 NEQ ^$no-left JNZ
			( move ) ~zoom.x -- =zoom.x $no-left
		DUP #07 SFT #01 AND #01 NEQ ^$no-right JNZ
			( move ) ~zoom.x ++ =zoom.x $no-right
	#00 EQU #04 JNZ ,draw-canvas JSR2
	
	~Keys #00 EQU ,$no-keys JNZ2
		~Keys 
		DUP #20 NEQ ^$no-space JNZ
			( toggle zoom ) ~zoom.active #00 EQU =zoom.active ,redraw JSR2 $no-space 
		DUP #08 NEQ ^$no-backspace JNZ
			( erase ) ,clear JSR2 $no-backspace
		DUP #71 NEQ ^$no-qkey JNZ
			( tool0 ) #00 =brush.tool ,draw-toolpane JSR2 $no-qkey
		DUP #77 NEQ ^$no-wkey JNZ
			( tool0 ) #01 =brush.tool ,draw-toolpane JSR2 $no-wkey
		DUP #65 NEQ ^$no-ekey JNZ
			( tool0 ) #02 =brush.tool ,draw-toolpane JSR2 $no-ekey
		DUP #72 NEQ ^$no-rkey JNZ
			( tool0 ) #03 =brush.tool ,draw-toolpane JSR2 $no-rkey
		DUP #74 NEQ ^$no-tkey JNZ
			( tool0 ) #04 =brush.tool ,draw-toolpane JSR2 $no-tkey
		DUP 
			DUP #30 GTH SWP #39 LTH #0101 NEQ2 ^$no-numkey JNZ
			( size ) ~Keys #31 SUB =brush.size ,draw-sizepane JSR2 $no-numkey
		POP
		( release ) #00 =Keys
	$no-keys

	~Mouse.x =cursor.x0
	~Mouse.y =cursor.y0
	~Mouse.state =brush.last

BRK

@clear
	
	( from ) ,data
	( to ) ~canvas.w ~canvas.h MUL2 #0008 MUL2 ,data ADD2
	$loop
		OVR2 #00 ROT ROT POK2
		( incr ) SWP2 #0001 ADD2 SWP2
		OVR2 OVR2 LTH2 ^$loop JNZ
	POP2 POP2
	,redraw JSR2

RTN

@load-file ( path )

	=File.name ~canvas.w ~canvas.h MUL2 #0008 MUL2 =File.length ,data =File.load

RTN

@save-file

	=File.name ~canvas.w ~canvas.h MUL2 #0008 MUL2 =File.length ,data =File.save

RTN

@fit-canvas
	
	~canvas.w 8* ~canvas.x1 ADD2 =canvas.x2 
	~canvas.h 8* ~canvas.y1 ADD2 =canvas.y2 
	~canvas.x1 -- ~canvas.y1 -- ~canvas.x2 ~canvas.y2 #01 ,line-rect JSR2
	,draw-canvas JSR2

RTN

@paint-line ( x1 y1 x2 y2 )
	
	( load ) =line.y1 =line.x1 =line.y2 =line.x2

	( trim if zoomed )
	~zoom.active #01 NEQ ^$no-zoom JNZ
		~line.x1 8/ ~zoom.x ADD2 =line.x1
		~line.y1 8/ ~zoom.y ADD2 =line.y1
		~line.x2 8/ ~zoom.x ADD2 =line.x2
		~line.y2 8/ ~zoom.y ADD2 =line.y2
	$no-zoom

	~line.x1 ~line.x2 SUB2 ABS2 =line.dx
	~line.y1 ~line.y2 SUB2 ABS2 #0000 SWP2 SUB2 =line.dy
	#ffff #00 ~line.x2 ~line.x1 LTS2 #0002 MUL2 ADD2 =line.sx 
	#ffff #00 ~line.y2 ~line.y1 LTS2 #0002 MUL2 ADD2 =line.sy 
	~line.dx ~line.dy ADD2 =line.e1
	$loop
		( paint ) ~line.x2 ~line.y2 ~brush.oper JSR2
		~line.x2 ~line.x1 EQU2 ~line.y2 ~line.y1 EQU2 #0101 EQU2 ^$end JNZ
		~line.e1 #0002 MUL2 =line.e2
		~line.e2 ~line.dy LTS2 ^$skipy JNZ
			~line.e1 ~line.dy ADD2 =line.e1
			~line.x2 ~line.sx ADD2 =line.x2
		$skipy
		~line.e2 ~line.dx GTS2 ^$skipx JNZ
			~line.e1 ~line.dx ADD2 =line.e1
			~line.y2 ~line.sy ADD2 =line.y2
		$skipx
		,$loop JMP2
	$end

	,draw-canvas JSR2
	,draw-toolpane JSR2
	,draw-pattpane JSR2
	,draw-sizepane JSR2

RTN

@paint-rect ( x1 y1 x2 y2  )

	( load ) =rect.y2 =rect.x2 =rect.y1 =rect.x1

	( trim if zoomed )
	~zoom.active #01 NEQ ^$no-zoom JNZ
		~rect.x1 8/ ~zoom.x ADD2 =rect.x1
		~rect.y1 8/ ~zoom.y ADD2 =rect.y1
		~rect.x2 8/ ~zoom.x ADD2 #0001 ADD2 =rect.x2
		~rect.y2 8/ ~zoom.y ADD2 #0001 ADD2 =rect.y2
	$no-zoom

	~rect.x1 =pt2.x
	~rect.y1 =pt2.y

	$ver
		~rect.x1 =pt2.x
		$hor
			~pt2.x SWP POP =px.x ~pt2.y SWP POP =px.y
			,patternize JSR2 #00 EQU ^$no-pixel JNZ
				( draw ) ~pt2.x ~pt2.y ~brush.oper JSR2 $no-pixel
			( incr ) ~pt2.x ++ =pt2.x
			~pt2.x ~rect.x2 LTS2 ^$hor JNZ
		~pt2.y ++ =pt2.y
		~pt2.y ~rect.y2 LTS2 ^$ver JNZ

	,draw-canvas JSR2
	,draw-toolpane JSR2
	,draw-pattpane JSR2
	,draw-sizepane JSR2
	
RTN

@paint-brush ( x y )

	#0003 SUB2 =pt0.y #0003 SUB2 =pt0.x ( cursor offset )

	( trim if zoomed )
	~zoom.active #01 NEQ ^$no-zoom JNZ
		~pt0.x 8/ ~zoom.x ADD2 #0003 SUB2 =pt0.x
		~pt0.y 8/ ~zoom.y ADD2 #0003 SUB2 =pt0.y
	$no-zoom

	#00 =px.x #00 =px.y 
	$ver
		#00 =px.x
		$hor
			( addr ) ,size_icn #00 ~brush.size 8* ADD2
			( byte ) #00 ~px.y ADD2 PEK2 #07 ~px.x SUB SFT #01 AND 
			#00 EQU ^$no-pixel JNZ
			,patternize JSR2 #00 EQU ^$no-pixel JNZ
				~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 ~brush.oper JSR2 $no-pixel
			( incr ) ~px.x #01 ADD =px.x
			~px.x #08 LTH ^$hor JNZ
		( incr ) ~px.y #01 ADD =px.y
		~px.y #08 LTH ^$ver JNZ

	,draw-canvas JSR2
	,draw-toolpane JSR2
	,draw-pattpane JSR2
	,draw-sizepane JSR2

RTN

@patternize

	~brush.patt #00 NEQ ^$noplain JNZ
		#01 RTN
	$noplain

	~brush.patt #01 NEQ ^$notone1 JNZ
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 ADD2 #0001 AND2 #0000 EQU2 
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 SUB2 #0001 AND2 #0000 EQU2 
		#0101 EQU2
		RTN
	$notone1

	~brush.patt #02 NEQ ^$notone2 JNZ
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 ADD2 #0003 AND2 #0000 EQU2 
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 SUB2 #0003 AND2 #0000 EQU2 
		#0101 EQU2
		RTN
	$notone2

	~brush.patt #03 NEQ ^$notone3 JNZ
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 ADD2 #0005 AND2 #0000 EQU2 
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 SUB2 #0005 AND2 #0000 EQU2 
		#0101 EQU2
		RTN
	$notone3

	~brush.patt #04 NEQ ^$notone4 JNZ
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 ADD2 #0003 AND2 #0000 EQU2 RTN
	$notone4

	~brush.patt #05 NEQ ^$notone5 JNZ
		~pt0.x #00 ~px.x ADD2 ~pt0.y #00 ~px.y ADD2 SUB2 #0003 AND2 #0000 EQU2 RTN
	$notone5

	~brush.patt #06 NEQ ^$notone6 JNZ
		~pt0.x #00 ~px.x ADD2 #0001 AND2 SWP POP RTN
	$notone6

	~brush.patt #07 NEQ ^$notone7 JNZ
		~pt0.y #00 ~px.y ADD2 #0001 AND2 SWP POP RTN
	$notone7

	#00

RTN

@get-pixel ( x y -- b )

	SWP POP #07 AND =px.y
	SWP POP #07 AND =px.x
	( get tile ) ~pt1.x 8/ ~pt1.y 8/ ~canvas.w MUL2 ADD2 8*
	( add addr ) ,data ADD2
	#00 ~px.y ADD2 PEK2 #07 ~px.x SUB SFT #01 AND

RTN

@add-pixel ( x y  )

	=pt1.y =pt1.x
	( get tile addr ) ,data ~pt1.x 8/ ~pt1.y 8/ ~canvas.w MUL2 ADD2 8* ~pt1.y MOD8 ADD2 ADD2 
	( load ) DUP2 PEK2
	( mask ) #01 #07 ~pt1.x MOD8 SWP POP SUB SFL ORA
	( save ) ROT ROT POK2

RTN

@remove-pixel ( x y )

	=pt1.y =pt1.x
	( get tile addr ) ,data ~pt1.x 8/ ~pt1.y 8/ ~canvas.w MUL2 ADD2 8* ~pt1.y MOD8 ADD2 ADD2 
	( load ) DUP2 PEK2
	( mask ) #01 #07 ~pt1.x MOD8 SWP POP SUB SFL #ff EOR AND
	( save ) ROT ROT POK2

RTN

( Drawing )

@redraw
	
	,draw-background JSR2
	,draw-canvas JSR2
	,draw-toolpane JSR2
	,draw-pattpane JSR2
	,draw-sizepane JSR2
		
RTN

@draw-canvas
	
	~zoom.active #01 EQU ,draw-canvas-zoom JNZ2

	~canvas.y1 =Sprite.y
	,data =Sprite.addr
	$ver
		~canvas.x1 =Sprite.x 
		$hor
			( draw ) #09 =Sprite.color
			( incr ) ~Sprite.x 8+ =Sprite.x
			( incr ) ~Sprite.addr 8+ =Sprite.addr
		~Sprite.x ~canvas.x2 NEQ2 ^$hor JNZ
		( incr ) ~Sprite.y 8+ =Sprite.y
	~Sprite.y ~canvas.y2 NEQ2 ^$ver JNZ

RTN

@draw-canvas-zoom
	
	~zoom.y =pt1.y
	~canvas.y1 =Sprite.y
	,data =Sprite.addr
	$ver
		~canvas.x1 =Sprite.x 
		~zoom.x =pt1.x
		$hor
			( incr ) ,bigpixel_icn #0008 #00 ~pt1.x ~pt1.y ,get-pixel JSR2 MUL2 ADD2 =Sprite.addr
			( draw ) #09 =Sprite.color
			( incr ) ~Sprite.x 8+ =Sprite.x
			( incr ) ~pt1.x ++ =pt1.x
		~Sprite.x ~canvas.x2 NEQ2 ^$hor JNZ
		( incr ) ~Sprite.y 8+ =Sprite.y
		( incr ) ~pt1.y ++ =pt1.y
	~Sprite.y ~canvas.y2 NEQ2 ^$ver JNZ

RTN

@draw-cursor

	~cursor.x ~Mouse.x NEQ2
	~cursor.y ~Mouse.y NEQ2
	#0000 EQU2 
	~Mouse.state 
	#00 NEQ 
	#0101 EQU2 RTN? ( Return if unchanged )

	,blank_icn =Sprite.addr

	( clear brush size )
	~cursor.x #0003 SUB2 =Sprite.x
	~cursor.y #0003 SUB2 =Sprite.y
	#10 =Sprite.color

	( clear last cursor )
	~cursor.x =Sprite.x
	~cursor.y =Sprite.y
	#10 =Sprite.color

	( record cursor positions )
	~Mouse.x =cursor.x 
	~Mouse.y =cursor.y

	( draw size cursor )
	~brush.tool #01 NEQ ,$outside-canvas JNZ2
	~Mouse.x CLN2r ~canvas.x1 GTH2 STH2r ~canvas.x2 LTH2 #0101 NEQ2 ,$outside-canvas JNZ2
	~Mouse.y CLN2r ~canvas.y1 GTH2 STH2r ~canvas.y2 LTH2 #0101 NEQ2 ,$outside-canvas JNZ2	
		( do not draw size in toolpane )
		~Mouse.x CLN2r ~toolpane.x1 GTH2 STH2r ~toolpane.x2 LTH2 #0101 EQU2 ~Mouse.y CLN2r ~toolpane.y1 GTH2 STH2r ~toolpane.y2 LTH2 #0101 EQU2 #0101 EQU2 ,$outside-canvas JNZ2
		~Mouse.x CLN2r ~sizepane.x1 GTH2 STH2r ~sizepane.x2 LTH2 #0101 EQU2 ~Mouse.y CLN2r ~sizepane.y1 GTH2 STH2r ~sizepane.y2 LTH2 #0101 EQU2 #0101 EQU2 ,$outside-canvas JNZ2
		~Mouse.x CLN2r ~pattpane.x1 GTH2 STH2r ~pattpane.x2 LTH2 #0101 EQU2 ~Mouse.y CLN2r ~pattpane.y1 GTH2 STH2r ~pattpane.y2 LTH2 #0101 EQU2 #0101 EQU2 ,$outside-canvas JNZ2
		( do not draw size when holding alt )
		~Controller #02 EQU ^$outside-canvas JNZ
		~cursor.x #0003 SUB2 =Sprite.x
		~cursor.y #0003 SUB2 =Sprite.y
		,brush_view #00 ~brush.size 8* ADD2 =Sprite.addr
		#11 ~Mouse.state #02 MUL ADD =Sprite.color
		~Mouse.state #00 EQU ^$outside-canvas JNZ
			RTN
	$outside-canvas

	~cursor.x =Sprite.x
	~cursor.y =Sprite.y
	,pointers_icn #00 ~Controller #02 EQU 8* ADD2 =Sprite.addr
	#1f =Sprite.color

RTN

@draw-toolpane
	
	~toolpane.x1 -- ~toolpane.y1 -- ~toolpane.x2 ~toolpane.y2 #00 ,line-rect JSR2
	~toolpane.x1 #0002 SUB2 ~toolpane.y1 #0002 SUB2 ~toolpane.x2 ~toolpane.y2 #01 ,line-rect JSR2

	~toolpane.x1 =Sprite.x
	~toolpane.y1 =Sprite.y
	,tool_icn =Sprite.addr

	$tools
		( draw ) #01 ~Sprite.x ~pattpane.x1 SUB2 8/ SWP POP ~brush.tool EQU #02 MUL ADD =Sprite.color
		( incr ) ~Sprite.x 8+ =Sprite.x
		( incr ) ~Sprite.addr 8+ =Sprite.addr
		~Sprite.x ~toolpane.x2 LTH2 ^$tools JNZ

	~zoom.active #01 NEQ ^$no-zoom JNZ
		~Sprite.x #0008 SUB2 =Sprite.x
		,tool_icn #0028 ADD2 =Sprite.addr
		#01 #04 ~brush.tool EQU #02 MUL ADD =Sprite.color
	$no-zoom

RTN

@draw-pattpane
	
	~pattpane.x1 -- ~pattpane.y1 -- ~pattpane.x2 ~pattpane.y2 #00 ,line-rect JSR2
	~pattpane.x1 #0002 SUB2 ~pattpane.y1 #0002 SUB2 ~pattpane.x2 ~pattpane.y2 #01 ,line-rect JSR2

	~pattpane.x1 =Sprite.x
	~pattpane.y1 =Sprite.y
	,patt_icn =Sprite.addr

	$patterns
		( draw ) #01 ~Sprite.x ~pattpane.x1 SUB2 8/ SWP POP ~brush.patt EQU #02 MUL ADD =Sprite.color
		( incr ) ~Sprite.x 8+ =Sprite.x
		( incr ) ~Sprite.addr 8+ =Sprite.addr
		~Sprite.x ~pattpane.x2 LTH2 ^$patterns JNZ

RTN

@draw-sizepane

	~sizepane.x1 -- ~sizepane.y1 -- ~sizepane.x2 ~sizepane.y2 #00 ,line-rect JSR2
	~sizepane.x1 #0002 SUB2 ~sizepane.y1 #0002 SUB2 ~sizepane.x2 ~sizepane.y2 #01 ,line-rect JSR2

	~sizepane.x1 =Sprite.x
	~sizepane.y1 =Sprite.y
	,size_icn =Sprite.addr

	$patterns
		( draw ) #01 ~Sprite.x ~sizepane.x1 SUB2 8/ SWP POP ~brush.size EQU #02 MUL ADD =Sprite.color
		( incr ) ~Sprite.x 8+ =Sprite.x
		( incr ) ~Sprite.addr 8+ =Sprite.addr
		~Sprite.x ~sizepane.x2 LTH2 ^$patterns JNZ

RTN

@draw-background
	
	( draw hor line )
	#0000 =Screen.x ~center.y =Screen.y
	#0000 ~Screen.width ( from/to )
	$draw-hor
		( draw ) #01 =Screen.color
		( incr ) SWP2 #0002 ADD2 DUP2 =Screen.x SWP2
		OVR2 OVR2 LTH2 ^$draw-hor JNZ
	POP2 POP2

	( draw ver line )
	~center.x =Screen.x #0000 =Screen.y
	#0000 ~Screen.height ( from/to )
	$draw-ver
		( draw ) #01 =Screen.color
		( incr ) SWP2 #0002 ADD2 DUP2 =Screen.y SWP2
		OVR2 OVR2 LTH2 ^$draw-ver JNZ
	POP2 POP2

	( draw save/load/guides icons )
	~Screen.width #0018 SUB2 =Sprite.x
	~Screen.height #0010 SUB2 =Sprite.y
	,load_icn =Sprite.addr
	#01 =Sprite.color
	~Screen.width #0010 SUB2 =Sprite.x
	,save_icn =Sprite.addr
	#01 =Sprite.color
	~Screen.width #0020 SUB2 =Sprite.x

	( draw width )
	~Screen.width #0040 SUB2 =Sprite.x
	,font_hex ~canvas.w #f0 AND #04 SFT #08 MUL ADD2 =Sprite.addr
	( draw ) #02 =Sprite.color
	~Sprite.x 8+ =Sprite.x
	,font_hex ~canvas.w #0f AND #08 MUL ADD2 =Sprite.addr
	( draw ) #02 =Sprite.color
	~Sprite.x 8+ =Sprite.x
	( draw height )
	,font_hex ~canvas.h #f0 AND #04 SFT #08 MUL ADD2 =Sprite.addr
	( draw ) #02 =Sprite.color
	~Sprite.x 8+ =Sprite.x
	,font_hex ~canvas.h #0f AND #08 MUL ADD2 =Sprite.addr
	( draw ) #02 =Sprite.color

RTN

( Generics )

@line-rect ( x1 y1 x2 y2 color )

	( load ) =color =rect.y2 =rect.x2 DUP2 =Screen.y =rect.y1 DUP2 =Screen.x =rect.x1
	$hor
		( incr ) ~Screen.x ++ =Screen.x
		( draw ) ~rect.y1 =Screen.y ~color =Screen.color
		( draw ) ~rect.y2 =Screen.y ~color =Screen.color
		~Screen.x ~rect.x2 NEQ2 ^$hor JNZ
	~rect.y1 =Screen.y
	$ver
		( draw ) ~rect.x1 =Screen.x ~color =Screen.color
		( draw ) ~rect.x2 =Screen.x ~color =Screen.color
		( incr ) ~Screen.y ++ =Screen.y
		~Screen.y ~rect.y2 ++ NEQ2 ^$ver JNZ

RTN

@fill-rect ( x1 y1 x2 y2 color )

	( load ) =color =rect.y2 =rect.x2 DUP2 =Screen.y =rect.y1 DUP2 =Screen.x =rect.x1
	$ver
		~rect.x1 =Screen.x
		$hor
			( draw ) ~color =Screen.color
			( incr ) ~Screen.x ++ =Screen.x
			~Screen.x ~rect.x2 NEQ2 ^$hor JNZ
		( incr ) ~Screen.y ++ =Screen.y
		~Screen.y ~rect.y2 NEQ2 ^$ver JNZ

RTN

@size_icn    
	[ 0000 0010 0000 0000 ]
	[ 0000 1038 1000 0000 ]
	[ 0000 3838 3800 0000 ]
	[ 0010 387c 3810 0000 ]
	[ 0038 7c7c 7c38 0000 ]
	[ 1038 7cfe 7c38 1000 ]
	[ 387c fefe fe7c 3800 ]
	[ 7cfe fefe fefe 7c00 ]

@patt_icn 
	[ fefe fefe fefe fe00 ]
	[ fed6 aad6 aad6 fe00 ]
	[ fe92 82d6 8292 fe00 ]
	[ fe82 92aa 9282 fe00 ]
	[ fea6 ca92 a6ca fe00 ]
	[ feca a692 caa6 fe00 ]
	[ feaa aaaa aaaa fe00 ]	
	[ fe82 fe82 fe82 fe00 ]

@tool_icn 
	[ c0e0 5028 140a 0400 ]
	[ e0d0 a844 2212 0c00 ]
	[ c0b8 4848 7804 0200 ]
	[ 44ba 4444 44ba 4400 ]
	[ 3048 8484 4834 0200 ] ( zoom )
	[ 3245 8284 4834 0200 ] ( zoom out )

@brush_view 
	[ 0000 0010 0000 0000 ]
	[ 0000 1028 1000 0000 ]
	[ 0000 3828 3800 0000 ]
	[ 0010 2844 2810 0000 ]
	[ 0038 4444 4438 0000 ]
	[ 1028 4482 4428 1000 ]
	[ 3844 8282 8244 3800 ]
	[ 7c82 8282 8282 7c00 ]
	[ 7cfe fefe fefe 7c00 ]

@bigpixel_icn 
	[ 5580 0080 0080 0080 ]
	[ 55ff 7fff 7fff 7fff ]

@pointers_icn
	[ 80c0 e0f0 f8e0 1000 ]
	[ 4040 4070 f8f8 f870 ]

@load_icn       [ feaa d6aa d4aa f400 ]
@save_icn       [ fe82 8282 848a f400 ]

@blank_icn      [ 0000 0000 0000 0000 ]
@filepath       [ projects/pictures/tima2a1a.bit 00 ]

@font_hex ( 0-F ) 
[
	007c 8282 8282 827c 0030 1010 1010 1010
	007c 8202 7c80 80fe 007c 8202 1c02 827c
	000c 1424 4484 fe04 00fe 8080 7c02 827c
	007c 8280 fc82 827c 007c 8202 1e02 0202
	007c 8282 7c82 827c 007c 8282 7e02 827c
	007c 8202 7e82 827e 00fc 8282 fc82 82fc 
	007c 8280 8080 827c 00fc 8282 8282 82fc 
	007c 8280 f080 827c 007c 8280 f080 8080
]

@ERROR BRK 

@data [ ]
